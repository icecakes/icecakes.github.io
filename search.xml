<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用Hexo搭建个人博客 入门</title>
      <link href="/2020/04/04/%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/04/04/%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>​        Hexo安装详情，推荐查看Hexo中文网站：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>，本文大部分内容都参考自Hexo中文网站。本次安装，在Windows10系统下进行。</p><a id="more"></a><h2 id="安装Hexo前准备"><a href="#安装Hexo前准备" class="headerlink" title="安装Hexo前准备"></a>安装Hexo前准备</h2><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><ol><li>首先需要下载node.js，这里使用官网下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs</a>，也可以访问<a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">淘宝 Node.js 镜像</a>。</li><li>在下载了msi文件之后，双击进行安装操作。</li><li>可以在Windows PowerShell中使用命令：node -v，查看当前Node.js版本，使用命令：npm -v，查看npm版本，也是为了检测Node.js是否安装成功。本次安装过程中，使用命令行工具为Git Bash。</li></ol><h3 id="使用npm安装cnpm"><a href="#使用npm安装cnpm" class="headerlink" title="使用npm安装cnpm"></a>使用npm安装cnpm</h3><ol><li><p>由于在一些情况下使用npm下载速度有限，所以本次安装将使用淘宝cnpm下载npm仓库中的包。</p></li><li><p>使用命令安装cnpm。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install cnpm -g --registry=https://r.npm.taobao.org</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li>安装详情可以参考：<a href="https://npm.taobao.org/package/cnpm" target="_blank" rel="noopener">TAONPM</a>。</li></ol><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ol><li><p>首先需要确定安装博客的位置，也是安装Hexo框架的位置，新建一个文件夹，将Hexo和以后的网页都放在这个文件夹中。</p></li><li><p>在命令行中进入这个文件夹，使用安装命令安装Hexo客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure></li></ol><h3 id="写第一个博客"><a href="#写第一个博客" class="headerlink" title="写第一个博客"></a>写第一个博客</h3><ol><li><p>首先进入之前创建的空文件夹中。</p></li><li><p>使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure><p>你也可以在init后面加上[文件夹名称]，它会在之前创建的空文件夹中再创建一个文件夹，将初始化的文件放到新创建的文件夹中，本次初始化没有添加init后面的参数。</p></li><li><p>初始化需要从GitHub上克隆文件到本地，由于网络原因，可能需要一段时间的等待。</p></li><li><p>在初始化完成之后，你可以在文件夹中看到一些初始化后得到的文件，使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment">#生成博客网站</span></span><br><span class="line">$ hexo s <span class="comment">#运行博客</span></span><br></pre></td></tr></table></figure></li><li><p>运行成功之后，根据提示，在浏览器中访问默认地址：<a href="http://localhost:4000/" target="_blank" rel="noopener">Hexo</a>，你将看到搭建成功的页面。</p></li><li><p>使用‘Ctrl’+‘c’停止服务器。</p></li><li><p>在./source/_posts目录中，你可以看到默认的博客”hello-world.md”文件，你可以在当前路径下新建一个md文件，作为你的第一个博客，然后使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="comment">#清理缓存文件和生成的静态文件（db.jsonh和public）</span></span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>同样访问本地默认地址，查看博客界面。</p></li><li><p>也可以使用命令来创建你的博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"my first blog"</span></span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>更多命令详情可以查看Hexo中文网站。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux上搭建Assetto Corsa服务器</title>
      <link href="/2020/04/04/%E5%9C%A8Linux%E4%B8%8A%E6%90%AD%E5%BB%BAAssetto%20Corsa%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/04/04/%E5%9C%A8Linux%E4%B8%8A%E6%90%AD%E5%BB%BAAssetto%20Corsa%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>本文中将AC服务器搭建在阿里云服务器上，系统为CentOS7</p><a id="more"></a><p>在安装前，请确保有公网IP以及端口的开放</p><p>首先安装SteamCMD来获取AC服务器需要的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个文件夹</span></span><br><span class="line">mkdir steam</span><br><span class="line"><span class="comment">#进入steam文件夹</span></span><br><span class="line"><span class="built_in">cd</span> steam</span><br><span class="line"><span class="comment">#获取SteamCMD压缩包并解压</span></span><br><span class="line">wget http//media.steampowered.com/client/steamcmd_linux.tar.gz</span><br><span class="line">tar -xvf steamcmd_linux.tar.gz</span><br><span class="line"><span class="comment">#删除原压缩包，启动SteamCMD以WINDOWS模式打开</span></span><br><span class="line">rm steamcmd_linux.tar.gz</span><br><span class="line">./steamcmd.sh +@sSteamCmdForcePlatformType windows</span><br><span class="line"><span class="comment">#如果你的系统是64位，可以使用下面的命令将环境转换成64位</span></span><br><span class="line">./steamcmd.sh +@sSteamCmdForcePlatformType windows +@sSteamCmdForcePlatformBitness 64</span><br></pre></td></tr></table></figure><p>SteamCMD详情参考官方：<a href="https://developer.valvesoftware.com/wiki/SteamCMD" target="_blank" rel="noopener">VALVE Developer Community</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#登录steam</span></span><br><span class="line">Steam&gt;login &lt;username&gt;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="comment">#登录之后</span></span><br><span class="line">Steam&gt;force_install_dir ./assetto</span><br><span class="line">Steam&gt;app_update 302550</span><br><span class="line">Steam&gt;<span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入assetto文件夹</span></span><br><span class="line"><span class="built_in">cd</span> assetto</span><br><span class="line"><span class="comment">#在assetto文件夹中，可以看到acServer二进制文件以及存放配置的文件夹cfg，在这个文件夹下使用下面的命令即可打开服务器</span></span><br><span class="line">./acServer</span><br></pre></td></tr></table></figure><p>你可以直接修改在cfg文件夹下的server_cfg.ini文件来配置服务器，也可以在Windows系统中在可视化的界面下配置完成后导出配置文件，覆盖服务器下的文件</p><p>在Windows下进入..\steam\steamapps\common\assettocorsa\server，运行acServerManager.exe</p><p>在界面下方选择Export即可导出两个配置文件。</p><p>在acServerManager.exe，Settings选项中，勾选Show on Lobby才能在游戏服务器列表中看到（非局域网），这也是需要公网IP以及开放端口的原因。</p>]]></content>
      
      
      
        <tags>
            
            <tag> assetto corsa </tag>
            
            <tag> 神力科莎 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> acServerManager </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
